from ansible import errors
import ipaddress
import re
import json
output = ""


def nodelist(nodedict, targetsegment):
    global output
    for node in nodedict:
        ip = ipaddress.ip_address(node["address"])
        nw = ipaddress.ip_network(targetsegment)
        nodeline = ''
        if ip in nw:
            nodeline = nodeline + '      "' + str(node["name"])
            if "vrf" in str(node):
                nodeline = nodeline + ':' + str(node["vrf"])
            nodeline = nodeline + '" [address = "' + str(node["ifname"])
            if "vlan" in str(node):
                nodeline = nodeline + "." + str(node["vlan"])
            nodeline = nodeline + "\\n" + str(node["address"]) + '"];'
            output = output + str(nodeline) + "\n"


def autogenerate_network(data):
    defaultmask = data["defaultmask"]
    for node in data["node"]:
        ip = ipaddress.ip_address(node["address"])
        generateflag = 0
        for network in data["network"]:
            nw = ipaddress.ip_network(network["address"], strict=False)
            if ip in nw:
                generateflag = 1
        if generateflag == 0:
            adddict = {}
            adddict["name"] = '"' + \
                str(node["address"]) + "\\nautogenerated" + '"'
            adddict["address"] = str(ipaddress.ip_network(
                node["address"] + "/32").supernet(new_prefix=int(defaultmask)))
            data["network"].append(adddict)


def nwdiag_filter(data):
    autogenerate_network(data)
    global output
    output = output + str("{") + "\n"
    for network in data["network"]:
        output = output + \
            str('  network ' + str(network["name"]) + ' {') + "\n"
        output = output + str('      address = "' +
                              str(network["address"]) + '"') + "\n"
        output = output + str('\n\n')
        nodelist(data["node"], network["address"])
        output = output + str('  }\n')
    output = output + str("}\n")

    return output


class FilterModule(object):
    def filters(self):
        return {
            'nwdiag_filter': nwdiag_filter,

        }
